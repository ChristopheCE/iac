name: "terraform-apply"

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      TerraformBackendResourceGroup:
        type: string
        required: true
      TerraformBackendStorageAccount:
        type: string
        required: true
      TerraformBackendStorageContainer:
        type: string
        required: true
      TerraformBackendStorageKey:
        type: string
        required: true  
      code:
        type: string
        required: true
        description: "Abbreviated environment name"    
      plan:
        type: string
        required: true
      artifact:
        type: string
        required: true
jobs:  
  terraform_apply:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact }}

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        # with:
          # cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: |
          terraform init \
          -backend-config="resource_group_name=${{ inputs.TerraformBackendResourceGroup }}" \
          -backend-config="storage_account_name=${{ inputs.TerraformBackendStorageAccount }}" \
          -backend-config="container_name=${{ inputs.TerraformBackendStorageContainer }}" \
          -backend-config="key=${{ inputs.TerraformBackendStorageKey }}" \

      # Apply an execution plan for Terraform
      - name: Terraform Apply
        run: terraform apply \
          -auto-approve \
          -var="environment_code=${{ inputs.code }}" \
          ${{ inputs.plan }} \
          